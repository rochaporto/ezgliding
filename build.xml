<project name="ezgliding" default="dist" basedir=".">
	<description>Main build file for ezgliding project</description>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="src" location="src"/>
	<property name="test" location="test"/>
	
	<property name="junit.dir" location="/usr/share/java"/>
	<!-- use this to add the debug flag to compile (useful for testing) -->
	<property name="compile.debug" location="off"/>
	<presetdef name="javac"><javac includeantruntime="false" /></presetdef>

	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${build}/ae"/>
		<mkdir dir="${build}/reports"/>
		<mkdir dir="${build}/src"/>
		<mkdir dir="${build}/test"/>
		<mkdir dir="${dist}/lib"/>
	</target>

	<target name="compile" depends="init" description="compile sources">
		<javac srcdir="${src}/com/ezgliding/igc" destdir="${build}/src" debug="${compile.debug}"/>
	</target>

	<target name="compiletest" depends="dist" description="compile test sources">
		<javac srcdir="${test}" destdir="${build}/test" debug="on">
			<classpath>
				<fileset dir="${junit.dir}"><include name="**/junit*jar"/></fileset>
				<fileset dir="${dist}"><include name="**/*jar"/></fileset>
			</classpath>
		</javac>
	</target>

	<target name="dist" depends="compile" description="create dist package">
		<jar jarfile="${dist}/lib/ezgliding.jar" basedir="${build}/src"/>
	</target>

	<target name="disttest" depends="compiletest" description="create test dist package">
		<jar jarfile="${dist}/lib/ezgliding-test.jar" basedir="${build}/test"/>
	</target>

	<target name="test" depends="disttest" description="runs basic tests">
		<junit printsummary="withOutAndErr" showoutput="on">
			<sysproperty key="java.util.logging.config.file" value="test/logging.properties"/>
			<classpath>
				<fileset dir="${junit.dir}"><include name="**/junit*jar"/></fileset>
				<fileset dir="${dist}"><include name="**/*jar"/></fileset>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<batchtest todir="${build}/reports">
				<formatter type="xml"/>
				<fileset dir="${test}"><include name="**/*Test.java"/></fileset>
			</batchtest> 
		</junit>
		<junitreport todir="${build}/reports">
			<fileset dir="${build}/reports"><include name="TEST-*.xml"/></fileset>
			<report format="frames" todir="${build}/reports/html"/>
		</junitreport>
	</target>

	<target name="ptest" depends="disttest" description="runs performance tests">
		<junit printsummary="withOutAndErr" showoutput="on">
			<sysproperty key="java.util.logging.config.file" value="test/logging.properties"/>
			<classpath>
				<fileset dir="${junit.dir}"><include name="**/junit*jar"/></fileset>
				<fileset dir="${dist}"><include name="**/*jar"/></fileset>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<batchtest todir="${build}/reports">
				<formatter type="xml"/>
				<fileset dir="${test}"><include name="**/*TestPerf.java"/></fileset>
			</batchtest> 
		</junit>
		<junitreport todir="${build}/reports">
			<fileset dir="${build}/reports"><include name="TEST-*.xml"/></fileset>
			<report format="frames" todir="${build}/reports/html"/>
		</junitreport>
	</target>

	<target name="stest" depends="disttest" description="runs single test from argument">
		<!-- ex: ant stest -Dclass=com.ezgliding.igc.CandidateTest -Dmethod=testLargestDiagonal -->
		<junit printsummary="withOutAndErr" showoutput="on">
			<sysproperty key="java.util.logging.config.file" value="test/logging.properties"/>
			<classpath>
				<fileset dir="${junit.dir}"><include name="**/junit*jar"/></fileset>
				<fileset dir="${dist}"><include name="**/*jar"/></fileset>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<test name="${class}" methods="${method}"/>
		</junit>
	</target>

	<target name="clean" description="clean it up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<!-- AppEngine Targets -->
	<property name="sdk.dir" location="/home/rocha/opt/appengine-java-sdk-1.8.4" />
	<import file="${sdk.dir}/config/user/ant-macros.xml" />

	<path id="ae.classpath">
		<pathelement path="${build}/ae/WEB-INF/classes" />
 		<fileset dir="${build}/ae/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${sdk.dir}/lib">
			<include name="shared/**/*.jar" />
		</fileset>
	</path>

	<target name="aecpjars" description="Copies the App Engine JARs to the WAR.">
		<copy todir="${build}/ae/WEB-INF/lib" flatten="true">
			<fileset dir="${sdk.dir}/lib/user"><include name="**/*.jar" /></fileset>
		</copy>
	</target>

	<target name="aecompile" depends="compile,aecpjars"
		description="Compiles Java source and copies other source files to the WAR.">
		<mkdir dir="${build}/ae/WEB-INF/classes" />
		<copy todir="${build}/ae/WEB-INF">
			<fileset dir="${src}/WEB-INF">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
		<javac srcdir="${src}" destdir="${build}/ae/WEB-INF/classes" 
			classpathref="ae.classpath" debug="${compile.debug}" />
	</target>

	<target name="aerun" depends="aecompile" description="Starts the development server.">
		<dev_appserver war="${build}/ae/" />
	</target>

	<target name="aeupdate" depends="aecompile" description="Uploads the application to App Engine.">
		<appcfg action="update" war="${build}/ae">
			<options><arg value="--oauth2"/></options>
		</appcfg>
	</target>

	<target name="aerollback" depends="aecompile" description="Rolls back an interrupted application update.">
		<appcfg action="rollback" war="${build}/ae">
			<options><arg value="--oauth2"/></options>
		</appcfg>
	</target>

	<target name="aegetlogs" depends="aecompile" description="Downloads log data from App Engine for the application.">
		<appcfg action="request_logs" war="${build}/ae">
			<options><arg value="--oauth2"/><arg value="--num_days=5"/></options>
			<args><arg value="build/ae/logs.txt"/></args>
		</appcfg>
	</target>	

</project>
